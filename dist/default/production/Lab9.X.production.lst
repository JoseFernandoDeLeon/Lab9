

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 30 18:59:08 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0012                     _T2CONbits	set	18
   207  0008                     _PORTD	set	8
   208  0005                     _PORTA	set	5
   209  0001                     _TMR0	set	1
   210  0008                     _PORTDbits	set	8
   211  000B                     _INTCONbits	set	11
   212  001D                     _CCP2CONbits	set	29
   213  001B                     _CCPR2L	set	27
   214  0017                     _CCP1CONbits	set	23
   215  001E                     _ADRESH	set	30
   216  0015                     _CCPR1L	set	21
   217  001F                     _ADCON0bits	set	31
   218  000C                     _PIR1bits	set	12
   219  008C                     _PIE1bits	set	140
   220  0092                     _PR2	set	146
   221  0081                     _OPTION_REGbits	set	129
   222  0087                     _TRISCbits	set	135
   223  009F                     _ADCON1bits	set	159
   224  008F                     _OSCCONbits	set	143
   225  0088                     _TRISD	set	136
   226  0085                     _TRISA	set	133
   227  009E                     _ADRESL	set	158
   228  0189                     _ANSELH	set	393
   229  0188                     _ANSEL	set	392
   230                           
   231                           	psect	cinit
   232  000F                     start_initialization:	
   233                           ; #config settings
   234                           
   235  000F                     __initialization:
   236                           
   237                           ; Clear objects allocated to COMMON
   238  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   239  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   240  0011                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243  0011                     __end_of__initialization:
   244  0011  0183               	clrf	3
   245  0012  120A  118A  28FE   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248  0077                     __pbssCOMMON:
   249  0077                     _pot3_val:
   250  0077                     	ds	1
   251  0078                     _counter:
   252  0078                     	ds	1
   253                           
   254                           	psect	cstackCOMMON
   255  0070                     __pcstackCOMMON:
   256  0070                     ?_setup:
   257  0070                     ?_isr:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ??_isr:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_main:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 1 bytes @ 0x0
   268  0070                     	ds	4
   269  0074                     ??_setup:
   270                           
   271                           ; 1 bytes @ 0x4
   272  0074                     	ds	1
   273  0075                     ??_main:
   274                           
   275                           ; 1 bytes @ 0x5
   276  0075                     	ds	2
   277                           
   278                           	psect	maintext
   279  00FE                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 91 in file "postlab.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : B00/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0
   302 ;;      Totals:         2       0       0       0       0
   303 ;;Total ram usage:        2 bytes
   304 ;; Hardware stack levels required when called: 2
   305 ;; This function calls:
   306 ;;		_setup
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312  00FE                     _main:	
   313                           ;psect for function _main
   314                           
   315  00FE                     l766:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   318                           
   319                           
   320                           ;postlab.c: 92:     setup();
   321  00FE  120A  118A  2097  120A  118A  	fcall	_setup
   322  0103                     l768:
   323                           
   324                           ;postlab.c: 95:     if (ADCON0bits.GO == 0) {
   325  0103  1283               	bcf	3,5	;RP0=0, select bank0
   326  0104  1303               	bcf	3,6	;RP1=0, select bank0
   327  0105  189F               	btfsc	31,1	;volatile
   328  0106  2908               	goto	u91
   329  0107  2909               	goto	u90
   330  0108                     u91:
   331  0108  2903               	goto	l768
   332  0109                     u90:
   333  0109                     l770:
   334                           
   335                           ;postlab.c: 96:         if (ADCON0bits.CHS == 0b0000)
   336  0109  0C1F               	rrf	31,w	;volatile
   337  010A  00F5               	movwf	??_main
   338  010B  0C75               	rrf	??_main,w
   339  010C  390F               	andlw	15
   340  010D  3A00               	xorlw	0
   341  010E  1D03               	skipz
   342  010F  2911               	goto	u101
   343  0110  2912               	goto	u100
   344  0111                     u101:
   345  0111  2917               	goto	l774
   346  0112                     u100:
   347  0112                     l772:
   348                           
   349                           ;postlab.c: 97:             ADCON0bits.CHS = 0b0001;
   350  0112  081F               	movf	31,w	;volatile
   351  0113  39C3               	andlw	-61
   352  0114  3804               	iorlw	4
   353  0115  009F               	movwf	31	;volatile
   354  0116  2927               	goto	l780
   355  0117                     l774:
   356  0117  0C1F               	rrf	31,w	;volatile
   357  0118  00F5               	movwf	??_main
   358  0119  0C75               	rrf	??_main,w
   359  011A  390F               	andlw	15
   360  011B  3A01               	xorlw	1
   361  011C  1D03               	skipz
   362  011D  291F               	goto	u111
   363  011E  2920               	goto	u110
   364  011F                     u111:
   365  011F  2925               	goto	l778
   366  0120                     u110:
   367  0120                     l776:
   368                           
   369                           ;postlab.c: 99:             ADCON0bits.CHS = 0b0010;
   370  0120  081F               	movf	31,w	;volatile
   371  0121  39C3               	andlw	-61
   372  0122  3808               	iorlw	8
   373  0123  009F               	movwf	31	;volatile
   374  0124  2927               	goto	l780
   375  0125                     l778:
   376                           
   377                           ;postlab.c: 101:             ADCON0bits.CHS = 0b0000;
   378  0125  30C3               	movlw	-61
   379  0126  059F               	andwf	31,f	;volatile
   380  0127                     l780:
   381                           
   382                           ;postlab.c: 103:         _delay((unsigned long)((1000)*(8000000/4000000.0)));
   383  0127  3003               	movlw	3
   384  0128  00F6               	movwf	??_main+1
   385  0129  3097               	movlw	151
   386  012A  00F5               	movwf	??_main
   387  012B                     u127:
   388  012B  0BF5               	decfsz	??_main,f
   389  012C  292B               	goto	u127
   390  012D  0BF6               	decfsz	??_main+1,f
   391  012E  292B               	goto	u127
   392  012F  2930               	nop2
   393  0130                     l782:
   394                           
   395                           ;postlab.c: 104:         ADCON0bits.GO = 1;
   396  0130  1283               	bcf	3,5	;RP0=0, select bank0
   397  0131  1303               	bcf	3,6	;RP1=0, select bank0
   398  0132  149F               	bsf	31,1	;volatile
   399  0133  2903               	goto	l768
   400  0134  120A  118A  280C   	ljmp	start
   401  0137                     __end_of_main:
   402                           
   403                           	psect	text1
   404  0097                     __ptext1:	
   405 ;; *************** function _setup *****************
   406 ;; Defined at:
   407 ;;		line 115 in file "postlab.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          1       0       0       0       0
   424 ;;      Totals:         1       0       0       0       0
   425 ;;Total ram usage:        1 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435  0097                     _setup:	
   436                           ;psect for function _setup
   437                           
   438  0097                     l680:	
   439                           ;incstack = 0
   440                           ; Regs used in _setup: [wreg+status,2+status,0]
   441                           
   442                           
   443                           ;postlab.c: 118:     ANSEL = 0b00000111;
   444  0097  3007               	movlw	7
   445  0098  1683               	bsf	3,5	;RP0=1, select bank3
   446  0099  1703               	bsf	3,6	;RP1=1, select bank3
   447  009A  0088               	movwf	8	;volatile
   448  009B                     l682:
   449                           
   450                           ;postlab.c: 119:     ANSELH = 0;
   451  009B  0189               	clrf	9	;volatile
   452  009C                     l684:
   453                           
   454                           ;postlab.c: 121:     TRISA = 0b00000011;
   455  009C  3003               	movlw	3
   456  009D  1683               	bsf	3,5	;RP0=1, select bank1
   457  009E  1303               	bcf	3,6	;RP1=0, select bank1
   458  009F  0085               	movwf	5	;volatile
   459                           
   460                           ;postlab.c: 122:     PORTA = 0;
   461  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   462  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   463  00A2  0185               	clrf	5	;volatile
   464                           
   465                           ;postlab.c: 124:     TRISD = 0;
   466  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   467  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   468  00A5  0188               	clrf	8	;volatile
   469                           
   470                           ;postlab.c: 125:     PORTD = 0;
   471  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   472  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   473  00A8  0188               	clrf	8	;volatile
   474  00A9                     l686:
   475                           
   476                           ;postlab.c: 128:     OSCCONbits.IRCF = 0b0111;
   477  00A9  3070               	movlw	112
   478  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   479  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   480  00AC  048F               	iorwf	15,f	;volatile
   481  00AD                     l688:
   482                           
   483                           ;postlab.c: 129:     OSCCONbits.SCS = 1;
   484  00AD  140F               	bsf	15,0	;volatile
   485  00AE                     l690:
   486                           
   487                           ;postlab.c: 133:     ADCON1bits.ADFM = 0;
   488  00AE  139F               	bcf	31,7	;volatile
   489  00AF                     l692:
   490                           
   491                           ;postlab.c: 134:     ADCON1bits.VCFG0 = 0;
   492  00AF  121F               	bcf	31,4	;volatile
   493  00B0                     l694:
   494                           
   495                           ;postlab.c: 135:     ADCON1bits.VCFG1 = 0;
   496  00B0  129F               	bcf	31,5	;volatile
   497  00B1                     l696:
   498                           
   499                           ;postlab.c: 137:     ADCON0bits.ADCS = 0b10;
   500  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   501  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   502  00B3  081F               	movf	31,w	;volatile
   503  00B4  393F               	andlw	-193
   504  00B5  3880               	iorlw	128
   505  00B6  009F               	movwf	31	;volatile
   506  00B7                     l698:
   507                           
   508                           ;postlab.c: 138:     ADCON0bits.CHS = 0b0000;
   509  00B7  30C3               	movlw	-61
   510  00B8  059F               	andwf	31,f	;volatile
   511  00B9                     l700:
   512                           
   513                           ;postlab.c: 140:     ADCON0bits.ADON = 1;
   514  00B9  141F               	bsf	31,0	;volatile
   515  00BA                     l702:
   516                           
   517                           ;postlab.c: 141:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   518  00BA  3021               	movlw	33
   519  00BB  00F4               	movwf	??_setup
   520  00BC                     u137:
   521  00BC  0BF4               	decfsz	??_setup,f
   522  00BD  28BC               	goto	u137
   523  00BE                     l704:
   524                           
   525                           ;postlab.c: 146:     TRISCbits.TRISC2 = 1;
   526  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   527  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   528  00C0  1507               	bsf	7,2	;volatile
   529  00C1                     l706:
   530                           
   531                           ;postlab.c: 147:     TRISCbits.TRISC1 = 1;
   532  00C1  1487               	bsf	7,1	;volatile
   533  00C2                     l708:
   534                           
   535                           ;postlab.c: 149:     CCP1CONbits.P1M = 0;
   536  00C2  303F               	movlw	-193
   537  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   538  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   539  00C5  0597               	andwf	23,f	;volatile
   540  00C6                     l710:
   541                           
   542                           ;postlab.c: 150:     CCP1CONbits.CCP1M = 0b1100;
   543  00C6  0817               	movf	23,w	;volatile
   544  00C7  39F0               	andlw	-16
   545  00C8  380C               	iorlw	12
   546  00C9  0097               	movwf	23	;volatile
   547  00CA                     l712:
   548                           
   549                           ;postlab.c: 152:     CCP2CONbits.CCP2M = 0b1100;
   550  00CA  081D               	movf	29,w	;volatile
   551  00CB  39F0               	andlw	-16
   552  00CC  380C               	iorlw	12
   553  00CD  009D               	movwf	29	;volatile
   554  00CE                     l714:
   555                           
   556                           ;postlab.c: 154:     CCPR1L = 0x0F;
   557  00CE  300F               	movlw	15
   558  00CF  0095               	movwf	21	;volatile
   559  00D0                     l716:
   560                           
   561                           ;postlab.c: 155:     CCP1CONbits.DC1B = 0;
   562  00D0  30CF               	movlw	-49
   563  00D1  0597               	andwf	23,f	;volatile
   564  00D2                     l718:
   565                           
   566                           ;postlab.c: 157:     CCPR2L = 0x0F;
   567  00D2  300F               	movlw	15
   568  00D3  009B               	movwf	27	;volatile
   569  00D4                     l720:
   570                           
   571                           ;postlab.c: 158:     CCP2CONbits.DC2B1 = 0;
   572  00D4  129D               	bcf	29,5	;volatile
   573  00D5                     l722:
   574                           
   575                           ;postlab.c: 159:     CCP2CONbits.DC2B0 = 0;
   576  00D5  121D               	bcf	29,4	;volatile
   577  00D6                     l724:
   578                           
   579                           ;postlab.c: 162:     OPTION_REGbits.T0CS = 0;
   580  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   581  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   582  00D8  1281               	bcf	1,5	;volatile
   583  00D9                     l726:
   584                           
   585                           ;postlab.c: 163:     OPTION_REGbits.PSA = 0;
   586  00D9  1181               	bcf	1,3	;volatile
   587  00DA                     l728:
   588                           
   589                           ;postlab.c: 164:     OPTION_REGbits.PS = 0b011;
   590  00DA  0801               	movf	1,w	;volatile
   591  00DB  39F8               	andlw	-8
   592  00DC  3803               	iorlw	3
   593  00DD  0081               	movwf	1	;volatile
   594  00DE                     l730:
   595                           
   596                           ;postlab.c: 165:     TMR0 = 6;
   597  00DE  3006               	movlw	6
   598  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   599  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   600  00E1  0081               	movwf	1	;volatile
   601  00E2                     l732:
   602                           
   603                           ;postlab.c: 169:     PR2 = 255;
   604  00E2  30FF               	movlw	255
   605  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   606  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   607  00E5  0092               	movwf	18	;volatile
   608  00E6                     l734:
   609                           
   610                           ;postlab.c: 170:     T2CONbits.T2CKPS = 0b11;
   611  00E6  3003               	movlw	3
   612  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   613  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   614  00E9  0492               	iorwf	18,f	;volatile
   615  00EA                     l736:
   616                           
   617                           ;postlab.c: 171:     T2CONbits.TMR2ON = 1;
   618  00EA  1512               	bsf	18,2	;volatile
   619  00EB                     l738:
   620                           
   621                           ;postlab.c: 172:     PIR1bits.TMR2IF = 0;
   622  00EB  108C               	bcf	12,1	;volatile
   623  00EC                     l85:	
   624                           ;postlab.c: 174:     while (PIR1bits.TMR2IF == 0);
   625                           
   626  00EC  1C8C               	btfss	12,1	;volatile
   627  00ED  28EF               	goto	u11
   628  00EE  28F0               	goto	u10
   629  00EF                     u11:
   630  00EF  28EC               	goto	l85
   631  00F0                     u10:
   632  00F0                     l87:
   633                           
   634                           ;postlab.c: 175:     PIR1bits.TMR2IF = 0;
   635  00F0  108C               	bcf	12,1	;volatile
   636                           
   637                           ;postlab.c: 177:     TRISCbits.TRISC2 = 0;
   638  00F1  1683               	bsf	3,5	;RP0=1, select bank1
   639  00F2  1303               	bcf	3,6	;RP1=0, select bank1
   640  00F3  1107               	bcf	7,2	;volatile
   641                           
   642                           ;postlab.c: 178:     TRISCbits.TRISC1 = 0;
   643  00F4  1087               	bcf	7,1	;volatile
   644                           
   645                           ;postlab.c: 181:     INTCONbits.GIE = 1;
   646  00F5  178B               	bsf	11,7	;volatile
   647                           
   648                           ;postlab.c: 182:     INTCONbits.PEIE = 1;
   649  00F6  170B               	bsf	11,6	;volatile
   650                           
   651                           ;postlab.c: 184:     PIE1bits.ADIE = 1;
   652  00F7  170C               	bsf	12,6	;volatile
   653                           
   654                           ;postlab.c: 185:     INTCONbits.TMR0IE = 1;
   655  00F8  168B               	bsf	11,5	;volatile
   656                           
   657                           ;postlab.c: 187:     PIR1bits.ADIF = 0;
   658  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   659  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   660  00FB  130C               	bcf	12,6	;volatile
   661                           
   662                           ;postlab.c: 188:     INTCONbits.T0IF = 0;
   663  00FC  110B               	bcf	11,2	;volatile
   664  00FD                     l88:
   665  00FD  0008               	return
   666  00FE                     __end_of_setup:
   667                           
   668                           	psect	text2
   669  0015                     __ptext2:	
   670 ;; *************** function _isr *****************
   671 ;; Defined at:
   672 ;;		line 58 in file "postlab.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   686 ;;      Params:         0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0
   688 ;;      Temps:          4       0       0       0       0
   689 ;;      Totals:         4       0       0       0       0
   690 ;;Total ram usage:        4 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		Interrupt level 1
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699  0015                     _isr:	
   700                           ;psect for function _isr
   701                           
   702  0015                     i1l740:
   703                           
   704                           ;postlab.c: 60:     if (PIR1bits.ADIF)
   705  0015  1283               	bcf	3,5	;RP0=0, select bank0
   706  0016  1303               	bcf	3,6	;RP1=0, select bank0
   707  0017  1F0C               	btfss	12,6	;volatile
   708  0018  281A               	goto	u2_21
   709  0019  281B               	goto	u2_20
   710  001A                     u2_21:
   711  001A  287C               	goto	i1l754
   712  001B                     u2_20:
   713  001B                     i1l742:
   714                           
   715                           ;postlab.c: 61:     {;postlab.c: 62:          if (ADCON0bits.CHS == 0b0000){
   716  001B  0C1F               	rrf	31,w	;volatile
   717  001C  00F0               	movwf	??_isr
   718  001D  0C70               	rrf	??_isr,w
   719  001E  390F               	andlw	15
   720  001F  3A00               	xorlw	0
   721  0020  1D03               	skipz
   722  0021  2823               	goto	u3_21
   723  0022  2824               	goto	u3_20
   724  0023                     u3_21:
   725  0023  2849               	goto	i1l746
   726  0024                     u3_20:
   727  0024                     i1l744:
   728                           
   729                           ;postlab.c: 63:             CCPR1L = (ADRESH>>1)+124;
   730  0024  081E               	movf	30,w	;volatile
   731  0025  00F0               	movwf	??_isr
   732  0026  1003               	clrc
   733  0027  0C70               	rrf	??_isr,w
   734  0028  3E7C               	addlw	124
   735  0029  0095               	movwf	21	;volatile
   736                           
   737                           ;postlab.c: 64:             CCP1CONbits.DC1B1 = ADRESH & 0b01;
   738  002A  081E               	movf	30,w	;volatile
   739  002B  3901               	andlw	1
   740  002C  00F0               	movwf	??_isr
   741  002D  0EF0               	swapf	??_isr,f
   742  002E  0DF0               	rlf	??_isr,f
   743  002F  0817               	movf	23,w	;volatile
   744  0030  0670               	xorwf	??_isr,w
   745  0031  39DF               	andlw	-33
   746  0032  0670               	xorwf	??_isr,w
   747  0033  0097               	movwf	23	;volatile
   748                           
   749                           ;postlab.c: 65:             CCP1CONbits.DC1B0 = ADRESL >> 7;
   750  0034  1683               	bsf	3,5	;RP0=1, select bank1
   751  0035  1303               	bcf	3,6	;RP1=0, select bank1
   752  0036  081E               	movf	30,w	;volatile
   753  0037  00F0               	movwf	??_isr
   754  0038  3007               	movlw	7
   755  0039                     u4_25:
   756  0039  1003               	clrc
   757  003A  0CF0               	rrf	??_isr,f
   758  003B  3EFF               	addlw	-1
   759  003C  1D03               	skipz
   760  003D  2839               	goto	u4_25
   761  003E  0870               	movf	??_isr,w
   762  003F  00F1               	movwf	??_isr+1
   763  0040  0EF1               	swapf	??_isr+1,f
   764  0041  1283               	bcf	3,5	;RP0=0, select bank0
   765  0042  1303               	bcf	3,6	;RP1=0, select bank0
   766  0043  0817               	movf	23,w	;volatile
   767  0044  0671               	xorwf	??_isr+1,w
   768  0045  39EF               	andlw	-17
   769  0046  0671               	xorwf	??_isr+1,w
   770  0047  0097               	movwf	23	;volatile
   771                           
   772                           ;postlab.c: 66:          }
   773  0048  287B               	goto	i1l752
   774  0049                     i1l746:
   775  0049  0C1F               	rrf	31,w	;volatile
   776  004A  00F0               	movwf	??_isr
   777  004B  0C70               	rrf	??_isr,w
   778  004C  390F               	andlw	15
   779  004D  3A01               	xorlw	1
   780  004E  1D03               	skipz
   781  004F  2851               	goto	u5_21
   782  0050  2852               	goto	u5_20
   783  0051                     u5_21:
   784  0051  2877               	goto	i1l750
   785  0052                     u5_20:
   786  0052                     i1l748:
   787                           
   788                           ;postlab.c: 69:              CCPR2L = (ADRESH>>1)+124;
   789  0052  081E               	movf	30,w	;volatile
   790  0053  00F0               	movwf	??_isr
   791  0054  1003               	clrc
   792  0055  0C70               	rrf	??_isr,w
   793  0056  3E7C               	addlw	124
   794  0057  009B               	movwf	27	;volatile
   795                           
   796                           ;postlab.c: 70:             CCP2CONbits.DC2B1 = ADRESH & 0b01;
   797  0058  081E               	movf	30,w	;volatile
   798  0059  3901               	andlw	1
   799  005A  00F0               	movwf	??_isr
   800  005B  0EF0               	swapf	??_isr,f
   801  005C  0DF0               	rlf	??_isr,f
   802  005D  081D               	movf	29,w	;volatile
   803  005E  0670               	xorwf	??_isr,w
   804  005F  39DF               	andlw	-33
   805  0060  0670               	xorwf	??_isr,w
   806  0061  009D               	movwf	29	;volatile
   807                           
   808                           ;postlab.c: 71:             CCP2CONbits.DC2B0 = ADRESL >> 7;
   809  0062  1683               	bsf	3,5	;RP0=1, select bank1
   810  0063  1303               	bcf	3,6	;RP1=0, select bank1
   811  0064  081E               	movf	30,w	;volatile
   812  0065  00F0               	movwf	??_isr
   813  0066  3007               	movlw	7
   814  0067                     u6_25:
   815  0067  1003               	clrc
   816  0068  0CF0               	rrf	??_isr,f
   817  0069  3EFF               	addlw	-1
   818  006A  1D03               	skipz
   819  006B  2867               	goto	u6_25
   820  006C  0870               	movf	??_isr,w
   821  006D  00F1               	movwf	??_isr+1
   822  006E  0EF1               	swapf	??_isr+1,f
   823  006F  1283               	bcf	3,5	;RP0=0, select bank0
   824  0070  1303               	bcf	3,6	;RP1=0, select bank0
   825  0071  081D               	movf	29,w	;volatile
   826  0072  0671               	xorwf	??_isr+1,w
   827  0073  39EF               	andlw	-17
   828  0074  0671               	xorwf	??_isr+1,w
   829  0075  009D               	movwf	29	;volatile
   830                           
   831                           ;postlab.c: 72:         }
   832  0076  287B               	goto	i1l752
   833  0077                     i1l750:
   834                           
   835                           ;postlab.c: 74:             pot3_val = ADRESH;
   836  0077  081E               	movf	30,w	;volatile
   837  0078  00F0               	movwf	??_isr
   838  0079  0870               	movf	??_isr,w
   839  007A  00F7               	movwf	_pot3_val
   840  007B                     i1l752:
   841                           
   842                           ;postlab.c: 75:         PIR1bits.ADIF = 0;
   843  007B  130C               	bcf	12,6	;volatile
   844  007C                     i1l754:
   845                           
   846                           ;postlab.c: 77:     if (INTCONbits.T0IF)
   847  007C  1D0B               	btfss	11,2	;volatile
   848  007D  287F               	goto	u7_21
   849  007E  2880               	goto	u7_20
   850  007F                     u7_21:
   851  007F  2890               	goto	i1l69
   852  0080                     u7_20:
   853  0080                     i1l756:
   854                           
   855                           ;postlab.c: 78:     {;postlab.c: 79:         counter++;
   856  0080  3001               	movlw	1
   857  0081  00F0               	movwf	??_isr
   858  0082  0870               	movf	??_isr,w
   859  0083  07F8               	addwf	_counter,f
   860  0084                     i1l758:
   861                           
   862                           ;postlab.c: 80:         if (counter < pot3_val)
   863  0084  0877               	movf	_pot3_val,w
   864  0085  0278               	subwf	_counter,w
   865  0086  1803               	skipnc
   866  0087  2889               	goto	u8_21
   867  0088  288A               	goto	u8_20
   868  0089                     u8_21:
   869  0089  288C               	goto	i1l67
   870  008A                     u8_20:
   871  008A                     i1l760:
   872                           
   873                           ;postlab.c: 81:             PORTDbits.RD0 = 1;
   874  008A  1408               	bsf	8,0	;volatile
   875  008B  288D               	goto	i1l762
   876  008C                     i1l67:	
   877                           ;postlab.c: 82:         else
   878                           
   879                           
   880                           ;postlab.c: 83:             PORTDbits.RD0 = 0;
   881  008C  1008               	bcf	8,0	;volatile
   882  008D                     i1l762:
   883                           
   884                           ;postlab.c: 84:         TMR0 = 6;
   885  008D  3006               	movlw	6
   886  008E  0081               	movwf	1	;volatile
   887  008F                     i1l764:
   888                           
   889                           ;postlab.c: 85:         INTCONbits.T0IF = 0;
   890  008F  110B               	bcf	11,2	;volatile
   891  0090                     i1l69:
   892  0090  0873               	movf	??_isr+3,w
   893  0091  008A               	movwf	10
   894  0092  0E72               	swapf	??_isr+2,w
   895  0093  0083               	movwf	3
   896  0094  0EFE               	swapf	btemp,f
   897  0095  0E7E               	swapf	btemp,w
   898  0096  0009               	retfie
   899  0097                     __end_of_isr:
   900  007E                     btemp	set	126	;btemp
   901  007E                     wtemp0	set	126
   902                           
   903                           	psect	intentry
   904  0004                     __pintentry:	
   905                           ;incstack = 0
   906                           ; Regs used in _isr: [wreg+status,2+status,0]
   907                           
   908  0004                     interrupt_function:
   909  007E                     saved_w	set	btemp
   910  0004  00FE               	movwf	btemp
   911  0005  0E03               	swapf	3,w
   912  0006  00F2               	movwf	??_isr+2
   913  0007  080A               	movf	10,w
   914  0008  00F3               	movwf	??_isr+3
   915  0009  120A  118A  2815   	ljmp	_isr
   916                           
   917                           	psect	idloc
   918                           
   919                           ;Config register IDLOC0 @ 0x2000
   920                           ;	unspecified, using default values
   921  2000                     	org	8192
   922  2000  3FFF               	dw	16383
   923                           
   924                           ;Config register IDLOC1 @ 0x2001
   925                           ;	unspecified, using default values
   926  2001                     	org	8193
   927  2001  3FFF               	dw	16383
   928                           
   929                           ;Config register IDLOC2 @ 0x2002
   930                           ;	unspecified, using default values
   931  2002                     	org	8194
   932  2002  3FFF               	dw	16383
   933                           
   934                           ;Config register IDLOC3 @ 0x2003
   935                           ;	unspecified, using default values
   936  2003                     	org	8195
   937  2003  3FFF               	dw	16383
   938                           
   939                           	psect	config
   940                           
   941                           ;Config register CONFIG1 @ 0x2007
   942                           ;	Oscillator Selection bits
   943                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   944                           ;	Watchdog Timer Enable bit
   945                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   946                           ;	Power-up Timer Enable bit
   947                           ;	PWRTE = OFF, PWRT disabled
   948                           ;	RE3/MCLR pin function select bit
   949                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   950                           ;	Code Protection bit
   951                           ;	CP = OFF, Program memory code protection is disabled
   952                           ;	Data Code Protection bit
   953                           ;	CPD = OFF, Data memory code protection is disabled
   954                           ;	Brown Out Reset Selection bits
   955                           ;	BOREN = OFF, BOR disabled
   956                           ;	Internal External Switchover bit
   957                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   958                           ;	Fail-Safe Clock Monitor Enabled bit
   959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   960                           ;	Low Voltage Programming Enable bit
   961                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   962                           ;	In-Circuit Debugger Mode bit
   963                           ;	DEBUG = 0x1, unprogrammed default
   964  2007                     	org	8199
   965  2007  20D4               	dw	8404
   966                           
   967                           ;Config register CONFIG2 @ 0x2008
   968                           ;	Brown-out Reset Selection bit
   969                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   970                           ;	Flash Program Memory Self Write Enable bits
   971                           ;	WRT = OFF, Write protection off
   972  2008                     	org	8200
   973  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              5 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 30 18:59:08 2022

                     l85 00EC                       l87 00F0                       l88 00FD  
                     u10 00F0                       u11 00EF                       u90 0109  
                     u91 0108                      l700 00B9                      l710 00C6  
                    l702 00BA                      l720 00D4                      l712 00CA  
                    l704 00BE                      l730 00DE                      l722 00D5  
                    l714 00CE                      l706 00C1                      l732 00E2  
                    l724 00D6                      l716 00D0                      l708 00C2  
                    l734 00E6                      l726 00D9                      l718 00D2  
                    l736 00EA                      l728 00DA                      l680 0097  
                    l738 00EB                      l690 00AE                      l682 009B  
                    l770 0109                      l692 00AF                      l684 009C  
                    l780 0127                      l772 0112                      l694 00B0  
                    l686 00A9                      l782 0130                      l774 0117  
                    l766 00FE                      l696 00B1                      l688 00AD  
                    l776 0120                      l768 0103                      l698 00B7  
                    l778 0125                      u100 0112                      u101 0111  
                    u110 0120                      u111 011F                      u127 012B  
                    u137 00BC                      _PR2 0092                      _isr 0015  
                   ?_isr 0070                     i1l67 008C                     i1l69 0090  
                   _TMR0 0001                     u2_20 001B                     u2_21 001A  
                   u3_20 0024                     u3_21 0023                     u4_25 0039  
                   u5_20 0052                     u5_21 0051                     u6_25 0067  
                   u7_20 0080                     u7_21 007F                     u8_20 008A  
                   u8_21 0089                     _main 00FE                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l740 0015                    i1l750 0077  
                  i1l742 001B                    i1l760 008A                    i1l752 007B  
                  i1l744 0024                    i1l762 008D                    i1l746 0049  
                  i1l754 007C                    i1l764 008F                    i1l756 0080  
                  i1l748 0052                    i1l758 0084                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _setup 0097                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0137  
                 ??_main 0075                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B                   ?_setup 0070  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 00FE           _OPTION_REGbits 0081  
                ??_setup 0074               __pmaintext 00FE               __pintentry 0004  
                __ptext1 0097                  __ptext2 0015                  _counter 0078  
              _T2CONbits 0012     end_of_initialization 0011                _PORTDbits 0008  
              _TRISCbits 0087              _CCP1CONbits 0017              _CCP2CONbits 001D  
    start_initialization 000F              __end_of_isr 0097              __pbssCOMMON 0077  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
               _pot3_val 0077               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
